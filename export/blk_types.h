// SPDX-FileCopyrightText: 2025 UnionTech Software Technology Co., Ltd
//
// SPDX-License-Identifier: LGPL-2.1-only

#ifndef __BLK_TYPES_H
#define __BLK_TYPES_H

#ifndef SECTOR_SHIFT
#define SECTOR_SHIFT 9
#endif
#ifndef SECTOR_SIZE
#define SECTOR_SIZE (1 << SECTOR_SHIFT)
#endif

#define PAGE_SECTORS_SHIFT (PAGE_SHIFT - SECTOR_SHIFT)
#define PAGE_SECTORS (1 << PAGE_SECTORS_SHIFT)
#define SECTOR_MASK (PAGE_SECTORS - 1)

enum
{
	BLK_STS_OK = 0,
	BLK_STS_NOTSUPP,
	BLK_STS_TIMEOUT,
	BLK_STS_NOSPC,
	BLK_STS_TRANSPORT,
	BLK_STS_TARGET,
	BLK_STS_RESV_CONFLICT,
	BLK_STS_MEDIUM,
	BLK_STS_PROTECTION,
	BLK_STS_RESOURCE,
	BLK_STS_IOERR,
	BLK_STS_DM_REQUEUE,
	BLK_STS_AGAIN,
	BLK_STS_DEV_RESOURCE,
	BLK_STS_ZONE_RESOURCE,
	BLK_STS_ZONE_OPEN_RESOURCE,
	BLK_STS_ZONE_ACTIVE_RESOURCE,
	BLK_STS_OFFLINE,
	BLK_STS_DURATION_LIMIT,
};

#define BIO_ISSUE_RES_BITS 1
#define BIO_ISSUE_SIZE_BITS 12
#define BIO_ISSUE_RES_SHIFT (64 - BIO_ISSUE_RES_BITS)
#define BIO_ISSUE_SIZE_SHIFT (BIO_ISSUE_RES_SHIFT - BIO_ISSUE_SIZE_BITS)
#define BIO_ISSUE_TIME_MASK ((1ULL << BIO_ISSUE_SIZE_SHIFT) - 1)
#define BIO_ISSUE_SIZE_MASK                                                    \
	(((1ULL << BIO_ISSUE_SIZE_BITS) - 1) << BIO_ISSUE_SIZE_SHIFT)
#define BIO_ISSUE_RES_MASK (~((1ULL << BIO_ISSUE_RES_SHIFT) - 1))
#define BIO_ISSUE_THROTL_SKIP_LATENCY (1ULL << 63)
#define BLK_QC_T_NONE -1U
#define BIO_RESET_BYTES offsetof(struct bio, bi_max_vecs)
#define BIO_MAX_SECTORS (UINT_MAX >> SECTOR_SHIFT)
#define REQ_OP_BITS 8
#define REQ_OP_MASK ((1 << REQ_OP_BITS) - 1)
#define REQ_FLAG_BITS 24

#ifndef __VMLINUX_H__
enum req_opf
{
	REQ_OP_READ = 0,
	REQ_OP_WRITE = 1,
	REQ_OP_FLUSH = 2,
	REQ_OP_DISCARD = 3,
	REQ_OP_SECURE_ERASE = 5,
	REQ_OP_ZONE_RESET = 6,
	REQ_OP_WRITE_SAME = 7,
	REQ_OP_ZONE_RESET_ALL = 8,
	REQ_OP_WRITE_ZEROES = 9,
	REQ_OP_ZONE_OPEN = 10,
	REQ_OP_ZONE_CLOSE = 11,
	REQ_OP_ZONE_FINISH = 12,
	REQ_OP_SCSI_IN = 32,
	REQ_OP_SCSI_OUT = 33,
	REQ_OP_DRV_IN = 34,
	REQ_OP_DRV_OUT = 35,
	REQ_OP_LAST,
};
enum req_flag_bits
{
	__REQ_FAILFAST_DEV = REQ_OP_BITS,
	__REQ_FAILFAST_TRANSPORT,
	__REQ_FAILFAST_DRIVER,
	__REQ_SYNC,
	__REQ_META,
	__REQ_PRIO,
	__REQ_NOMERGE,
	__REQ_IDLE,
	__REQ_INTEGRITY,
	__REQ_FUA,
	__REQ_PREFLUSH,
	__REQ_RAHEAD,
	__REQ_BACKGROUND,
	__REQ_NOWAIT,
	__REQ_NOWAIT_INLINE,
	__REQ_CGROUP_PUNT,
	__REQ_NOUNMAP,
	__REQ_HIPRI,
	__REQ_DRV,
	__REQ_SWAP,
	__REQ_NR_BITS,
};
#endif

#define REQ_FAILFAST_DEV (1ULL << __REQ_FAILFAST_DEV)
#define REQ_FAILFAST_TRANSPORT (1ULL << __REQ_FAILFAST_TRANSPORT)
#define REQ_FAILFAST_DRIVER (1ULL << __REQ_FAILFAST_DRIVER)
#define REQ_SYNC (1ULL << __REQ_SYNC)
#define REQ_META (1ULL << __REQ_META)
#define REQ_PRIO (1ULL << __REQ_PRIO)
#define REQ_NOMERGE (1ULL << __REQ_NOMERGE)
#define REQ_IDLE (1ULL << __REQ_IDLE)
#define REQ_INTEGRITY (1ULL << __REQ_INTEGRITY)
#define REQ_FUA (1ULL << __REQ_FUA)
#define REQ_PREFLUSH (1ULL << __REQ_PREFLUSH)
#define REQ_RAHEAD (1ULL << __REQ_RAHEAD)
#define REQ_BACKGROUND (1ULL << __REQ_BACKGROUND)
#define REQ_NOWAIT (1ULL << __REQ_NOWAIT)
#define REQ_NOWAIT_INLINE (1ULL << __REQ_NOWAIT_INLINE)
#define REQ_CGROUP_PUNT (1ULL << __REQ_CGROUP_PUNT)
#define REQ_NOUNMAP (1ULL << __REQ_NOUNMAP)
#define REQ_HIPRI (1ULL << __REQ_HIPRI)
#define REQ_DRV (1ULL << __REQ_DRV)
#define REQ_SWAP (1ULL << __REQ_SWAP)
#define REQ_FAILFAST_MASK                                                      \
	(REQ_FAILFAST_DEV | REQ_FAILFAST_TRANSPORT | REQ_FAILFAST_DRIVER)
#define REQ_NOMERGE_FLAGS (REQ_NOMERGE | REQ_PREFLUSH | REQ_FUA)

#endif
